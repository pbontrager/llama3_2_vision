# Config for multi-device LoRA finetuning in lora_finetune_distributed.py
# using a Llama3.2 11B Vision Instruct model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Meta-Llama-3.2-11B-Vision-Instruct
#
# To launch on 2 devices, run the following command from root:
#   tune run --nproc_per_node 2 lora_finetune_distributed --config llama3_2_vision/11B_lora
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run --nproc_per_node 2 lora_finetune_distributed --config llama3_2_vision/11B_lora checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works best when the model is being fine-tuned on 2+ GPUs.
# For single device LoRA finetuning please use 11B_lora_single_device.yaml
# or 11B_qlora_single_device.yaml


# Transform
tokenizer:
  _component_: llama3_2_vision.llama3_2_vision_transform
  path: /tmp/Meta-Llama-3.2-11B-Vision-Instruct/tokenizer.model
  image_size: 560

# Dataset
dataset:
  _component_: torchtune.datasets.multimodal.the_cauldron_dataset
  subset: ai2d
seed: null
shuffle: True
collate_fn: torchtune.data.padded_collate_tiled_images_and_mask

# Model Arguments
model:
  _component_: llama3_2_vision.lora_llama3_2_vision_11b
  decoder_trainable: "frozen"
  encoder_trainable: "lora"
  fusion_trainable: "lora"
  lora_attn_modules: ['q_proj', 'v_proj']
  apply_lora_to_mlp: False
  apply_lora_to_output: False
  lora_rank: 8
  lora_alpha: 16
  lora_dropout: 0.0
  image_size: 560


checkpointer:
  _component_: checkpointer.FullModelMetaCheckpointer
  checkpoint_dir: /tmp/Meta-Llama-3.2-11B-Vision-Instruct/
  checkpoint_files: [consolidated.pth]
  recipe_checkpoint: null
  output_dir: /tmp/Meta-Llama-3.2-11B-Vision-Instruct/
  model_type: LLAMA3_VISION
resume_from_checkpoint: False

# Fine-tuning arguments
batch_size: 2
epochs: 1 #3
optimizer:
  _component_: torch.optim.AdamW
  fused: True
  weight_decay: 0.01
  lr: 2e-5 #1e-7 #2e-5
lr_scheduler:
  _component_: torchtune.modules.get_cosine_schedule_with_warmup
  num_warmup_steps: 100
loss:
  _component_: torchtune.modules.loss.CEWithChunkedOutputLoss
max_steps_per_epoch: null #null
gradient_accumulation_steps: 1 #256 or 1
clip_grad_norm: 1.0 # False
optimizer_in_bwd: False
compile: False

# Training environment
device: cuda

# Memory management
enable_activation_checkpointing: True #True
enable_activation_offloading: False # True?

# Reduced precision
dtype: bf16

# Logging
metric_logger:
  _component_: torchtune.training.metric_logging.WandBLogger
  project: MMTests
  log_dir: ${output_dir}
  # _component_: torchtune.training.metric_logging.DiskLogger
  # log_dir: ${output_dir}
output_dir: /tmp/full-llama3.2-vision-finetune
log_every_n_steps: 1
log_peak_memory_stats: True #False
